/*
 * CollectionPanel.java Created on 15 Ноябрь 2008 г., 12:42
 */

package org.jbookshelf.gui;

import java.util.HashMap;
import java.util.Map;

import javax.swing.JScrollPane;
import javax.swing.JTree;
import javax.swing.JViewport;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;

import junit.framework.Assert;

import org.eclipse.emf.common.util.EList;
import org.eclipse.emf.ecore.EReference;
import org.jbookshelf.BookShelf;
import org.jbookshelf.JbookshelfPackage;
import org.jbookshelf.Unique;

/**
 * @author eav
 */
public class CollectionPanel
    extends javax.swing.JPanel
{
    private BookShelf bookShelf;

    /** Creates new form CollectionPanel */
    public CollectionPanel()
    {
        initComponents();
        initCustomComponents();
    }

    private void initCustomComponents()
    {
        // todo
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The
     * content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings( "unchecked" )
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents()
    {

        jPanel1 = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        cleanButton = new javax.swing.JButton();
        searchTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        isReadComboBox = new javax.swing.JComboBox();
        viewTabbedPane = new javax.swing.JTabbedPane();
        bookScrollPane = new javax.swing.JScrollPane();
        bookTree = new javax.swing.JTree();
        authorScrollPane = new javax.swing.JScrollPane();
        authorTree = new javax.swing.JTree();
        categoryScrollPane = new javax.swing.JScrollPane();
        categoryTree = new javax.swing.JTree();

        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle( "org/jbookshelf/gui/Bundle" ); // NOI18N
        cleanButton.setText( bundle.getString( "CollectionPanel.cleanButton.text" ) ); // NOI18N

        searchTextField.setText( bundle.getString( "CollectionPanel.searchTextField.text" ) ); // NOI18N

        searchButton.setText( bundle.getString( "CollectionPanel.searchButton.text" ) ); // NOI18N
        searchButton.setAutoscrolls( true );

        isReadComboBox.setModel( new javax.swing.DefaultComboBoxModel( new String[] { "All", "Read", "Unread" } ) );

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout( searchPanel );
        searchPanel.setLayout( searchPanelLayout );
        searchPanelLayout.setHorizontalGroup( searchPanelLayout.createParallelGroup(
            javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
            javax.swing.GroupLayout.Alignment.TRAILING,
            searchPanelLayout.createSequentialGroup().addContainerGap().addComponent( searchTextField,
                javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE ).addPreferredGap(
                javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE ).addComponent( isReadComboBox,
                javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE ).addPreferredGap(
                javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( cleanButton ).addPreferredGap(
                javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( searchButton ) ) );
        searchPanelLayout.setVerticalGroup( searchPanelLayout.createParallelGroup(
            javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
            searchPanelLayout.createParallelGroup( javax.swing.GroupLayout.Alignment.BASELINE ).addComponent(
                searchButton ).addComponent( cleanButton ).addComponent( searchTextField,
                javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE ).addComponent( isReadComboBox,
                javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.PREFERRED_SIZE ) ) );

        bookScrollPane.setViewportView( bookTree );

        viewTabbedPane.addTab( bundle.getString( "CollectionPanel.bookScrollPane.TabConstraints.tabTitle" ),
            bookScrollPane ); // NOI18N

        authorScrollPane.setViewportView( authorTree );

        viewTabbedPane.addTab( bundle.getString( "CollectionPanel.authorScrollPane.TabConstraints.tabTitle" ),
            authorScrollPane ); // NOI18N

        categoryScrollPane.setViewportView( categoryTree );

        viewTabbedPane.addTab( bundle.getString( "CollectionPanel.categoryScrollPane.TabConstraints.tabTitle" ),
            categoryScrollPane ); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout( jPanel1 );
        jPanel1.setLayout( jPanel1Layout );
        jPanel1Layout.setHorizontalGroup( jPanel1Layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
            .addComponent( viewTabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, 599, Short.MAX_VALUE ).addComponent(
                searchPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE,
                javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE ) );
        jPanel1Layout.setVerticalGroup( jPanel1Layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING )
            .addGroup(
                jPanel1Layout.createSequentialGroup().addComponent( searchPanel,
                    javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE ).addPreferredGap(
                    javax.swing.LayoutStyle.ComponentPlacement.RELATED ).addComponent( viewTabbedPane,
                    javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE ) ) );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout( this );
        this.setLayout( layout );
        layout.setHorizontalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGap( 0,
            599, Short.MAX_VALUE ).addGroup(
            layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
                layout.createSequentialGroup().addGap( 0, 0, Short.MAX_VALUE ).addComponent( jPanel1,
                    javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE ).addGap( 0, 0, Short.MAX_VALUE ) ) ) );
        layout.setVerticalGroup( layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGap( 0,
            502, Short.MAX_VALUE ).addGroup(
            layout.createParallelGroup( javax.swing.GroupLayout.Alignment.LEADING ).addGroup(
                layout.createSequentialGroup().addGap( 0, 0, Short.MAX_VALUE ).addComponent( jPanel1,
                    javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE,
                    javax.swing.GroupLayout.PREFERRED_SIZE ).addGap( 0, 0, Short.MAX_VALUE ) ) ) );
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane  authorScrollPane;
    private javax.swing.JTree        authorTree;
    private javax.swing.JScrollPane  bookScrollPane;
    private javax.swing.JTree        bookTree;
    private javax.swing.JScrollPane  categoryScrollPane;
    private javax.swing.JTree        categoryTree;
    private javax.swing.JButton      cleanButton;
    private javax.swing.JComboBox    isReadComboBox;
    private javax.swing.JPanel       jPanel1;
    private javax.swing.JButton      searchButton;
    private javax.swing.JPanel       searchPanel;
    private javax.swing.JTextField   searchTextField;
    private javax.swing.JTabbedPane  viewTabbedPane;

    // End of variables declaration//GEN-END:variables

    private Map<JTree, EReference[]> treeViews;

    public Map<JTree, EReference[]> getTreeViews()
    {
        if ( treeViews == null )
        {
            treeViews = new HashMap<JTree, EReference[]>();

            JbookshelfPackage jbsPackage = JbookshelfPackage.eINSTANCE;
            Assert.assertNotNull( bookTree );
            Assert.assertNotNull( authorTree );
            Assert.assertNotNull( categoryTree );

            treeViews.put( bookTree, new EReference[] { jbsPackage.getBookShelf_ReadingUnits(),
                            jbsPackage.getBookShelf_Authors(), jbsPackage.getBookShelf_Categories() } );
            treeViews.put( authorTree, new EReference[] { jbsPackage.getBookShelf_Authors(),
                            jbsPackage.getBookShelf_ReadingUnits(), jbsPackage.getBookShelf_Categories() } );
            treeViews.put( categoryTree, new EReference[] { jbsPackage.getBookShelf_Categories(),
                            jbsPackage.getBookShelf_ReadingUnits(), jbsPackage.getBookShelf_Categories() } );
        }
        return treeViews;
    }

    public void setCollection(
        BookShelf bookShelf )
    {
        this.bookShelf = bookShelf;
        JScrollPane scrollPane = (JScrollPane) viewTabbedPane.getSelectedComponent();
        JViewport viewport = (JViewport) scrollPane.getComponent( 0 );
        JTree tree = (JTree) viewport.getComponent( 0 );
        EReference[] references = getTreeViews().get( tree );
        Assert.assertNotNull( references );
        buildTree( tree, references );
    }

    @SuppressWarnings( "unchecked" )
    private void buildTree(
        JTree tree,
        EReference[] references )
    {
        tree.removeAll();
        tree.setRootVisible( false );
        DefaultTreeModel model = (DefaultTreeModel) tree.getModel();
        DefaultMutableTreeNode root = new DefaultMutableTreeNode( "" );
        model.setRoot( root );

        EList<Unique> list = (EList<Unique>) bookShelf.eGet( references[0] );
        for ( Unique unique : list )
        {
            root.add( new DefaultMutableTreeNode( unique.getName() ) );
        }
    }
}
